// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`"minify" option should work if minify is array and func return "undefined": assets 1`] = `
Object {
  "foo.css": "body {
  font-weight: bold; }

body {
  color: red; }
  body a {
    text-align: center; }


.two{color: red;}

.three{color: red;}

/*# sourceMappingURL=foo.css.map*/",
  "foo.css.map": "{\\"version\\":3,\\"sources\\":[\\"webpack:///./sourcemap/bar.scss\\",\\"webpack:///./sourcemap/foo.scss\\"],\\"names\\":[],\\"mappings\\":\\"AAAA;EACE,iBAAiB;;ACCnB;EACE,UAAU;EADZ;IAGI,kBAAkB\\",\\"file\\":\\"foo.css\\",\\"sourcesContent\\":[\\"body {\\\\n  font-weight: bold;\\\\n}\\",\\"@import 'bar';\\\\n\\\\nbody {\\\\n  color: red;\\\\n  a {\\\\n    text-align: center;\\\\n  }\\\\n}\\"],\\"sourceRoot\\":\\"\\"}",
}
`;

exports[`"minify" option should work if minify is array and func return "undefined": error 1`] = `Array []`;

exports[`"minify" option should work if minify is array and func return "undefined": warning 1`] = `Array []`;

exports[`"minify" option should work if minify is array: assets 1`] = `
Object {
  "foo.css": "body {
  font-weight: bold; }

body {
  color: red; }
  body a {
    text-align: center; }


.one{color: red;}

.two{color: red;}

.three{color: red;}

/*# sourceMappingURL=foo.css.map*/",
  "foo.css.map": "{\\"version\\":3,\\"sources\\":[\\"webpack:///./sourcemap/bar.scss\\",\\"webpack:///./sourcemap/foo.scss\\"],\\"names\\":[],\\"mappings\\":\\"AAAA;EACE,iBAAiB;;ACCnB;EACE,UAAU;EADZ;IAGI,kBAAkB\\",\\"file\\":\\"foo.css\\",\\"sourcesContent\\":[\\"body {\\\\n  font-weight: bold;\\\\n}\\",\\"@import 'bar';\\\\n\\\\nbody {\\\\n  color: red;\\\\n  a {\\\\n    text-align: center;\\\\n  }\\\\n}\\"],\\"sourceRoot\\":\\"\\"}",
}
`;

exports[`"minify" option should work if minify is array: error 1`] = `Array []`;

exports[`"minify" option should work if minify is array: warning 1`] = `Array []`;

exports[`"minify" option should work with "clean-css" minifier: assets 1`] = `
Object {
  "foo.css": "body{color:red}a{color:#00f}",
}
`;

exports[`"minify" option should work with "clean-css" minifier: error 1`] = `Array []`;

exports[`"minify" option should work with "clean-css" minifier: warning 1`] = `Array []`;

exports[`"minify" option should work with "csso" minifier: assets 1`] = `
Object {
  "foo.css": "body{font-weight:700;color:red}body a{text-align:center}
/*# sourceMappingURL=foo.css.map*/",
  "foo.css.map": "{\\"version\\":3,\\"sources\\":[\\"webpack:///./sourcemap/bar.scss\\",\\"webpack:///./sourcemap/foo.scss\\"],\\"names\\":[],\\"mappings\\":\\"AAAA,I,CACE,e,CCEA,S,CADF,M,CAGI,iB\\",\\"file\\":\\"foo.css\\",\\"sourcesContent\\":[\\"body {\\\\n  font-weight: bold;\\\\n}\\",\\"@import 'bar';\\\\n\\\\nbody {\\\\n  color: red;\\\\n  a {\\\\n    text-align: center;\\\\n  }\\\\n}\\"],\\"sourceRoot\\":\\"\\"}",
}
`;

exports[`"minify" option should work with "csso" minifier: error 1`] = `Array []`;

exports[`"minify" option should work with "csso" minifier: warning 1`] = `Array []`;
